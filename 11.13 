import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class LogMasker {
    public static void main(String[] args) {
        File inputDir = new File(System.getProperty("user.dir"), "INPUT");
        File outputDir = new File(System.getProperty("user.dir"), "OUTPUT");

        // Ensure output directory exists
        if (!outputDir.exists()) {
            outputDir.mkdir();
        }

        if (inputDir.exists() && inputDir.isDirectory()) {
            File[] files = inputDir.listFiles();
            if (files != null) {
                for (File file : files) {
                    maskLogFile(file, new File(outputDir, file.getName()));
                }
            }
        }
    }

    public static void maskLogFile(File inputFile, File outputFile) {
        try (BufferedReader reader = new BufferedReader(new FileReader(inputFile));
             BufferedWriter writer = new BufferedWriter(new FileWriter(outputFile))) {

            String line;
            while ((line = reader.readLine()) != null) {
                line = maskFields(line);
                writer.write(line);
                writer.newLine();
            }
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    public static String maskFields(String line) {
        // Regular expressions to find account numbers
        Pattern accountNoPatternJson = Pattern.compile("(\"account_no\"):\"?(\\d{4})(\\d{4})\"?");
        Pattern accountNoPatternCSV = Pattern.compile("(?:accountFromAccountNo|payee_acc_no|CustId)\\s*:\\s*(\\d{4})(\\d{4})");
        Matcher matcherJson = accountNoPatternJson.matcher(line);
        Matcher matcherCSV = accountNoPatternCSV.matcher(line);

        // Mask account_no inside JSON
        StringBuffer maskedLine = new StringBuffer();
        while (matcherJson.find()) {
            String maskedValue = maskDigits(matcherJson.group(2));
            String maskedField = matcherJson.group(1) + "\":\"" + maskedValue;
            matcherJson.appendReplacement(maskedLine, maskedField);
        }
        matcherJson.appendTail(maskedLine);

        // Mask account numbers in CSV format
        maskedLine = new StringBuffer();
        while (matcherCSV.find()) {
            String maskedValue = maskDigits(matcherCSV.group(1));
            matcherCSV.appendReplacement(maskedLine, matcherCSV.group().replace(matcherCSV.group(1), maskedValue));
        }
        matcherCSV.appendTail(maskedLine);

        return maskedLine.toString();
    }

    public static String maskDigits(String digits) {
        StringBuilder maskedValue = new StringBuilder();
        for (int i = 0; i < digits.length(); i++) {
            if (i < digits.length() - 4) {
                maskedValue.append("*");
            } else {
                maskedValue.append(digits.charAt(i));
            }
        }
        return maskedValue.toString();
    }
}