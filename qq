import java.sql.*;

public class DynamicQueryExecutor {
    public static void main(String[] args) {
        // Database connection details
        String jdbcURL = "jdbc:sqlserver://<server>:<port>;databaseName=<dbName>";
        String username = "<your-username>";
        String password = "<your-password>";

        Connection connection = null;
        Statement statement = null;
        ResultSet resultSet = null;

        try {
            // Step 1: Establish Connection
            connection = DriverManager.getConnection(jdbcURL, username, password);
            System.out.println("Connection established successfully!");

            // Step 2: Generate Dynamic SQL
            String dynamicQuery = generateDynamicQuery(connection);

            // Step 3: Execute the Query
            statement = connection.createStatement();
            resultSet = statement.executeQuery(dynamicQuery);

            // Step 4: Process the Result
            while (resultSet.next()) {
                System.out.print("Student_id: " + resultSet.getInt("Student_id"));
                // Add dynamic columns processing here
                System.out.println(); // Placeholder for column values
            }
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            // Close resources
            try {
                if (resultSet != null) resultSet.close();
                if (statement != null) statement.close();
                if (connection != null) connection.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }

    // Method to generate the dynamic SQL query
    private static String generateDynamicQuery(Connection connection) throws SQLException {
        StringBuilder sqlQuery = new StringBuilder("SELECT Student_id");
        Statement stmt = connection.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT DISTINCT Property_name FROM student_properties");

        while (rs.next()) {
            String columnName = rs.getString("Property_name");
            sqlQuery.append(", MAX(CASE WHEN Property_name = '").append(columnName)
                    .append("' THEN Property_value END) AS [").append(columnName).append("]");
        }
        rs.close();
        stmt.close();

        sqlQuery.append(" FROM student_properties GROUP BY Student_id");
        System.out.println("Generated Query: " + sqlQuery);
        return sqlQuery.toString();
    }
}