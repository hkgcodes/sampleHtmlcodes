const ldap = require('ldapjs'); // Import the ldapjs library

class TestAuth {
  async connect(userName, password) {
    const url = 'ldap://test.test1.net:389'; // Ensure the port is correct and the server is accessible
    const client = ldap.createClient({ url });

    return new Promise((resolve, reject) => {
      client.bind(userName, password, (err) => {
        if (err) {
          if (err.name === 'InvalidCredentialsError') {
            resolve('incorrect password or username');
          } else {
            console.error('Authentication error:', err);
            reject('Authentication failed');
          }
        } else {
          resolve('Authenticated');
        }

        client.unbind((unbindErr) => {
          if (unbindErr) {
            console.error('Failed to unbind client:', unbindErr);
          }
        });
      });
    });
  }
}

// Usage
const testAuth = new TestAuth();
const userName = 'cn=user,dc=example,dc=com'; // Adjust to your LDAP structure
const password = 'password123';

testAuth.connect(userName, password)
  .then(result => console.log(result))
  .catch(err => console.error('Error:', err));
